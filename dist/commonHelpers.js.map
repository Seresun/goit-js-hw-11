{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export async function fetchImages(query) {\r\n  const API_KEY = '45488141-0a4a6f9550d86e9b8ad8f4cbd';\r\n  const URL = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`;\r\n  \r\n  const response = await fetch(URL);\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  return response.json();\r\n}\r\n","export function renderImages(images) {\r\n  const gallery = document.querySelector('.gallery');\r\n  const markup = images.map(image => `\r\n    <a href=\"${image.largeImageURL}\">\r\n      <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\"/>\r\n      <div class=\"info\">\r\n        <p>Likes: ${image.likes}</p>\r\n        <p>Views: ${image.views}</p>\r\n      </div>\r\n    </a>\r\n  `).join('');\r\n  gallery.innerHTML = markup;\r\n}\r\n","import { fetchImages } from './js/pixabay-api.js'; \r\nimport { renderImages } from './js/render-functions.js'; \r\nimport SimpleLightbox from 'simplelightbox';\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\nimport iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\nimport './css/styles.css';\r\n\r\nlet lightbox;\r\n\r\nconst form = document.querySelector('#search-form');\r\nconst gallery = document.querySelector('.gallery');\r\nlet currentQuery = '';\r\nlet currentPage = 1;\r\n\r\nform.addEventListener('submit', onSearch);\r\n\r\nasync function onSearch(event) {\r\n  event.preventDefault();\r\n  currentQuery = event.currentTarget.elements.searchQuery.value.trim();\r\n\r\n  if (!currentQuery) {\r\n    iziToast.error({ title: 'Error', message: 'Please enter a search term!' });\r\n    return;\r\n  }\r\n\r\n  gallery.innerHTML = '';\r\n  currentPage = 1;\r\n\r\n  try {\r\n    const data = await fetchImages(currentQuery);\r\n    if (data.hits.length === 0) {\r\n      iziToast.warning({ title: 'Warning', message: 'No images found!' });\r\n    } else {\r\n      renderImages(data.hits);\r\n      lightbox = new SimpleLightbox('.gallery a');\r\n    }\r\n  } catch (error) {\r\n    iziToast.error({\r\n      title: 'Error',\r\n      message: `Something went wrong: ${error.message}`,\r\n    });\r\n  }\r\n}\r\n"],"names":["fetchImages","query","URL","response","renderImages","images","gallery","markup","image","lightbox","form","currentQuery","onSearch","event","iziToast","data","SimpleLightbox","error"],"mappings":"6vBAAO,eAAeA,EAAYC,EAAO,CAEvC,MAAMC,EAAM,qEAA6CD,CAAK,2DAExDE,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,6BAA6B,EAE/C,OAAOA,EAAS,MAClB,CCTO,SAASC,EAAaC,EAAQ,CACnC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAASF,EAAO,IAAIG,GAAS;AAAA,eACtBA,EAAM,aAAa;AAAA,kBAChBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,oBAEpCA,EAAM,KAAK;AAAA,oBACXA,EAAM,KAAK;AAAA;AAAA;AAAA,GAG5B,EAAE,KAAK,EAAE,EACVF,EAAQ,UAAYC,CACtB,CCJA,IAAIE,EAEJ,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CJ,EAAU,SAAS,cAAc,UAAU,EACjD,IAAIK,EAAe,GAGnBD,EAAK,iBAAiB,SAAUE,CAAQ,EAExC,eAAeA,EAASC,EAAO,CAI7B,GAHAA,EAAM,eAAc,EACpBF,EAAeE,EAAM,cAAc,SAAS,YAAY,MAAM,OAE1D,CAACF,EAAc,CACjBG,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,6BAA6B,CAAE,EACzE,MACD,CAEDR,EAAQ,UAAY,GAGpB,GAAI,CACF,MAAMS,EAAO,MAAMf,EAAYW,CAAY,EACvCI,EAAK,KAAK,SAAW,EACvBD,EAAS,QAAQ,CAAE,MAAO,UAAW,QAAS,kBAAkB,CAAE,GAElEV,EAAaW,EAAK,IAAI,EACtBN,EAAW,IAAIO,EAAe,YAAY,EAE7C,OAAQC,EAAO,CACdH,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBG,EAAM,OAAO,EACrD,CAAK,CACF,CACH"}